clc
clear
close all

filename='.mat'; % put the file name of the '.mat' file generated by the training code
load(filename)

load('../dataset/mnist/MNIST.mat')
images_tr=reshape(images_tr,[],size(images_tr,3))';
images_ts=reshape(images_ts,[],size(images_ts,3))';
labels_tr=labels_tr';
labels_ts=labels_ts';

rng('default');
t_inf=tic;
test_acc_analog_hp=test(images_ts,labels_ts,dnn,'HP');
fprintf('Analog forwarding: %.4f%%\n',test_acc_analog_hp*100)
toc(t_inf)

test_acc_binary_hp=test(images_ts,labels_ts,dnn,'B');
fprintf('Binary forwarding: %.4f%%\n',test_acc_binary_hp*100)
toc(t_inf)

test_acc_sampling_hp=test(images_ts,labels_ts,dnn,'S',100);
toc(t_inf)

fig_inf=figure;
semilogy(1:numel(test_acc_sampling_hp),(1-test_acc_analog_hp)*ones(1,numel(test_acc_sampling_hp))*100,'--','linewidth',2,'markersize',12,'markerfacecolor','w');hold on 
plot(1:numel(test_acc_sampling_hp),(1-test_acc_binary_hp)*ones(1,numel(test_acc_sampling_hp))*100,'-.','linewidth',2,'markersize',12,'markerfacecolor','w');hold on 

plot(1:numel(test_acc_sampling_hp),(1-test_acc_sampling_hp)*100,'s-','linewidth',2,'markersize',12,'markerfacecolor','w'); 
xlabel('Inference repetition');ylabel("Inference Error [%]");
ylim([1,15]);grid on;
set(gca,'fontsize',15,'linewidth',1.5);
legend({'HP inference','Binary inference','Stochastic inference'},'location','northeast');

dnn.test_acc_analog=test_acc_analog_hp;
dnn.test_acc_binary=test_acc_binary_hp;
dnn.test_acc_sampling=test_acc_sampling_hp;

save([folder,filename,'.mat'],'dnn') 
savefig(fig_inf,[folder,filename,'_inference.fig']) 

toc







